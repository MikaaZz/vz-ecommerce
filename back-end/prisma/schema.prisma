// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  firstName String
  lastName  String
  orders    Orders[]
  address   String
  products  Product[]
  type      String    @default("user")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  userId      Int
  user        User       @relation(fields: [userId], references: [id])
  price       Float
  discount    Discount[]
  images      Image[]
  categories  Category[]
  orderId     Int?
  order       Orders?    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Orders {
  id        Int        @id @default(autoincrement())
  userId    Int
  user      User       @relation(fields: [userId], references: [id])
  products  Product[]
  status    String
  price     Float
  discount  Discount[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Discount {
  id        Int      @id @default(autoincrement())
  code      String
  discount  Float
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  orderId   Int?
  order     Orders?  @relation(fields: [orderId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
